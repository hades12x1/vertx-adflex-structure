plugins {
    id 'java'
}

version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    vertxVersion = '3.8.4'
}

dependencies {
    compile "io.vertx:vertx-web:$vertxVersion"
    compile "io.vertx:vertx-core:$vertxVersion"
    implementation "io.vertx:vertx-core:$vertxVersion"
    implementation "io.vertx:vertx-service-proxy:$vertxVersion"
    compile "io.vertx:vertx-codegen:$vertxVersion:processor"
    compile "io.vertx:vertx-service-proxy:$vertxVersion"

    // Common
    compile 'org.apache.commons:commons-lang3:3.5'
    compile 'commons-io:commons-io:2.5'
    compile 'commons-validator:commons-validator:1.6'

    // Mongo-client.
    compile 'io.vertx:vertx-mongo-client:3.8.5'
    compile 'io.vertx:vertx-auth-mongo:3.8.5'

    // Elasticsearch
    compile 'org.elasticsearch:elasticsearch:2.4.4'
    compile 'org.elasticsearch.module:reindex:2.4.4'
    compile 'org.nlpcn:elasticsearch-sql:2.4.1.0'

    // Jackson
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.1'

    // Log4j 2
    compile "org.apache.logging.log4j:log4j-api:2.6.1"
    compile "org.apache.logging.log4j:log4j-core:2.6.1"
    compile "com.lmax:disruptor:3.3.4"

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    // Shiro Auth
    compile group: 'io.vertx', name: 'vertx-auth-shiro', version: '3.3.3'

    // Quartz
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.2'
}

sourceSets {
    generated1{
        java.srcDir "${projectDir}/src/generated1/java"
    }
}

task generateProxies(type: JavaCompile, group: 'build', description: 'Generates the Vertx proxies') {
    source = sourceSets.main.java // input source set
    classpath = configurations.compile //+ configurations.vertx // add processor module to classpath
    // specify javac arguments
    options.compilerArgs = [
            "-proc:only",
            "-processor", "io.vertx.codegen.CodeGenProcessor", // vertx processor here
            "-AoutputDirectory=${projectDir}/src/main"
    ]
    // specify output of generated1 code
    destinationDir = file("${projectDir}/src/main/java/vn/generated")
}


compileJava{
    dependsOn(generateProxies)
    source    += sourceSets.generated1.java
    // specify javac arguments
    options.compilerArgs = [
            "-Acodetrans.output=${projectDir}/src/main"
    ]
}
